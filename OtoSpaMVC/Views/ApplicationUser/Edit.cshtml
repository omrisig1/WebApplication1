@model OtoSpaMVC.Models.ApplicationUser

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Supplier</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-check">
                @{
                    string[] roles = { "admin", "user" };
                    foreach (string role in roles)
                    {
                        var ischecked = UserManager.IsInRoleAsync(Model, role).Result ? "checked" :"";
                        <label class="form-check-label">
                            <input type="checkbox" class="form-check-input" value="@role" @ischecked disabled>
                            @role
                        </label><br />
                    }

                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
