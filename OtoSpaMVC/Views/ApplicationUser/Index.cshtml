@model IEnumerable<OtoSpaMVC.Models.ApplicationUser>

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create" class="btn btn-success"> <span class="fa-plus-square" aria-hidden="true"></span> Create New</a>
</p>
@using (Html.BeginForm())
{
<p>
    Find by name: <input type="text" name="searchName" value="@ViewData["NameFilter"]" />
    Find by Email: <input type="text" name="searchEmail" value="@ViewData["EmailFilter"]" />
    Find by Role: <input type="text" name="searchRole" value="@ViewData["RoleFilter"]" disabled />
    <input type="submit" value="Search" class="btn btn-primary" /> |
    <a asp-action="Index">Back to Full List</a>
</p>
}
<table class="table table-striped table-hover table-condensed">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GetEnumerator().Current.Email)
            </th>
            <th>
                Role
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => UserManager.GetRolesAsync(item).Result)
                </td>
                <td>
                    <partial name="_listButtons"
                             view-data='new ViewDataDictionary(this.ViewData){{ "targetId", item.Id }}' />
                </td>
            </tr>
        }
    </tbody>
</table>
